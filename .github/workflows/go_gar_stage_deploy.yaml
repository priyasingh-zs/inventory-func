name: "stage deploy"
on:
  workflow_call:
    inputs:
      APP_NAME:
        type: string
        required: true
      IMAGE_REGISTRY:
        type: string
        required: true
      GAR_PROJECT:
        type: string
        required: true
      GAR_REGISTRY:
        type: string
        required: true
      CLUSTER_PROJECT:
        type: string
        required: true
      CLUSTER_NAME:
        type: string
        required: true
      NAMESPACE:
        type: string
        required: true
      HELM_VALUES_PATH:
        type: string
        required: true
      DOCKER_FILE_PATH:
        description: 'path of docker file'
        required: true
        type: string
      GO_VERSION:
        description: 'go version'
        required: false
        type: string
        default: '1.20'

      EXTRA_DEPENDENCIES:
        description: 'enable step to install extra dependencies'
        required: false
        type: boolean
        default: false

      DEPENDENCIES_COMMAND:
        description: 'commands to install extra dependencies'
        required: false
        type: string

      BUILD_COMMAND:
        description: 'go build command'
        required: true
        type: string

      ARTIFACT_PATH:
        description: "path used for build with respect to main.go file"
        required: true
        type: string

      SHA:
        type: string
        required: true

      BUILD_ARGUMENTS:
        description: 'build arguments for DockerFile'
        required: false
        type: string

    secrets:
      PAT:
        description: 'required input'
        required: true
      GAR_KEY:
        description: 'required input'
        required: true



jobs:
  dockerize:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.output-image.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # List of files that are added or modified in the commit
      - id: files
        uses: masesgroup/retrieve-changed-files@v2
      - run: |
          for added_modified_file in ${{ steps.files.outputs.all }}; do
            echo ${added_modified_file}
          done

      - id: sort
        run: |
          readarray -td $'\0' sorted < <(
                    for i in ${{ steps.files.outputs.all }};
                    do     printf '%s %s\0' "${#i}" "$i";
                    done |
                            sort -bz -k1,1n -k2|
                            cut -zd " " -f2-
                    )
          echo "files=`echo ${sorted[@]}`" >> "$GITHUB_OUTPUT"

  update_configmap:
    uses: priyasingh-zs/inventory-func/.github/workflows/update-configmap.yaml@main
    with:
      APP_NAME: order-data
      ENV_FILE_NAME: ./configs/.stage.env
      CLUSTER_PROJECT: modified-fabric-408810
      CLUSTER_NAME: test-dev
      NAMESPACE: test
    secrets:
      DEPLOY_KEY: ${{ secrets.GAR_KEY }}

  stage_deployment:
    runs-on: ubuntu-latest
    needs: dockerize
    container:
      image: ghcr.io/zopsmart/gha-images:deployments-0.1.3
      options: --rm
    name: ðŸš€ Deploy Stage
    env:
      image: ${{needs.dockerize.outputs.image}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Helm Chart
        run: git clone https://${{ secrets.PAT }}@github.com/zopsmart/helm.git

      - name: Add Helm Repo
        run: |
          helm repo add helm \
            --username "${{ github.actor }}" \
            --password "${{ secrets.PAT }}" \
            "https://raw.githubusercontent.com/zopsmart/helm/main/charts"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ inputs.CLUSTER_PROJECT }}
          service_account_key: ${{ secrets.GAR_KEY }}
          export_default_credentials: true

      - name: Set GCloud Project and Fetch Cluster Credentials
        run: gcloud container clusters get-credentials ${{ inputs.CLUSTER_NAME }} --region=us-central1 --project=${{ inputs.CLUSTER_PROJECT }}

      - name: Update Deployment Image
        run: helm upgrade --install --set image=${{ env.image }} ${{ inputs.APP_NAME }} helm/service -f ${{ inputs.HELM_VALUES_PATH }} -n ${{ inputs.NAMESPACE }} --version v0.1.0
