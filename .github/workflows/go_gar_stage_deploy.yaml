name: "stage deploy"
on:
  workflow_call:
    inputs:
      APP_NAME:
        type: string
        required: true
      CLUSTER_PROJECT:
        type: string
        required: true
      CLUSTER_NAME:
        type: string
        required: true
      NAMESPACE:
        type: string
        required: true
      HELM_VALUES_PATH:
        type: string
        required: true
      IMAGE:
        type: string
        required: true
      ENV_FILE_PATH:
        description: 'env file path'
        required: false
        type: string
        default: "./configs/.stage.env"

    secrets:
      PAT:
        description: 'required input'
        required: true
      GAR_KEY:
        description: 'required input'
        required: true

jobs:
  check_modified_file:
    name: Check other modified files
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development')
    runs-on: ubuntu-latest
    outputs:
      modified_file: ${{ steps.check_files.outputs.modified_files }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # Check if .stage.env or .prod.env is in the modified files
      - id: check_files
        run: |
          modified_files=$(git diff --name-only HEAD^ HEAD)
          if [[ -n $(echo "$modified_files" | grep -Ev '(\.(prod|stage)\.env$)') ]]; then
            echo "modified_files=true" >> "$GITHUB_OUTPUT"
          else
            echo "modified_files=false" >> "$GITHUB_OUTPUT"
          fi

      - name: print modified_files
        run: |
          echo "${{ steps.check_files.outputs.modified_files }}"

  update_configmap:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development')
    uses: priyasingh-zs/inventory-func/.github/workflows/update-configmap.yaml@development
    with:
      APP_NAME: ${{ inputs.APP_NAME }}
      ENV_FILE_PATH: ${{ inputs.ENV_FILE_PATH }}
      CLUSTER_PROJECT: ${{ inputs.CLUSTER_PROJECT }}
      CLUSTER_NAME: ${{ inputs.CLUSTER_NAME }}
      NAMESPACE: ${{ inputs.NAMESPACE }}
    secrets:
      DEPLOY_KEY: ${{ secrets.GAR_KEY }}

  stage_deployment:
    runs-on: ubuntu-latest
    if: ${{ needs.check_modified_file.outputs.modified_file == 'true' }}
    container:
      image: ghcr.io/zopsmart/gha-images:deployments-0.1.3
      options: --rm
    name: ðŸš€ Deploy Stage

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: print output
        run: |
         echo "a1=${{ needs.update_configmap.outputs.env_modified_file }}"
         echo "a2=${{ needs.update_configmap.outputs.modified_file }}"

#      - name: Setup Helm Chart
#        run: git clone https://${{ secrets.PAT }}@github.com/zopsmart/helm.git
#
#      - name: Authorize to GCP service account
#        uses: google-github-actions/auth@v1
#        with:
#          credentials_json: ${{ secrets.GAR_KEY }}
#
#      - name: Add Helm Repo
#        run: |
#          helm repo add helm \
#            --username "${{ github.actor }}" \
#            --password "${{ secrets.PAT }}" \
#            "https://raw.githubusercontent.com/zopsmart/helm/main/charts"
#
#      - name: Set GCloud Project and Fetch Cluster Credentials
#        run: gcloud container clusters get-credentials ${{ inputs.CLUSTER_NAME }} --region=us-central1 --project=${{ inputs.CLUSTER_PROJECT }}
#
#      - name: Update Deployment Image
#        run: helm upgrade --install --set image=${{ inputs.IMAGE }} ${{ inputs.APP_NAME }} helm/service -f ${{ inputs.HELM_VALUES_PATH }} -n ${{ inputs.NAMESPACE }} --version v0.1.4