name: Build and Deploy demo-order-data

on:
  push:
    branches: [  main ]
  pull_request:
    branches: [  main ]

env:
  APP_NAME: cloud-infra
  NAMESPACE: sample
  CLUSTER_NAME: dashboards-dev
  CLUSTER_PROJECT: zs-devops
  GCR_PROJECT: zs-devops
  STAGE_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
  GCR_KEY: ${{ secrets.GCR_KEY }}
jobs:
  build:
    name: ðŸ§ª Unit Tests and ðŸ”¨ Build
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request' || (github.ref == 'refs/heads/main' && github.event_name == 'push')

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
          id: Go

      - name: Checkout code into go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          git config --global url."https://${{ secrets.STAGE_PAT }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global http.sslVerify false
          go mod download

      - name: Make Directory
        run: mkdir build

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ env.GCR_KEY }}

      - name: Build and Push Docker Image to GCR
        run: |
          docker build -t inv:67 .
          docker tag inv:67 gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }}


      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.CLUSTER_PROJECT }}
          service_account_key: ${{ env.STAGE_DEPLOY_KEY }}
          export_default_credentials: true

      - name: Set GCloud Project and Fetch Cluster Credentials
        run: gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }}  --region=us-central1 --project=${{ env.CLUSTER_PROJECT }}

      - name: Update Deployment Image
        run: kubectl set image deployment/${{ env.APP_NAME }} ${{ env.APP_NAME }}=gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }} --namespace ${{ env.NAMESPACE }}
