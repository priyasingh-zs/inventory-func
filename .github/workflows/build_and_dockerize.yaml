name: "build and dockerize"
on:
  workflow_call:
    inputs:
      APP_NAME:
        type: string
        required: true
      IMAGE_REGISTRY:
        type: string
        required: true
      GAR_PROJECT:
        type: string
        required: true
      GAR_REGISTRY:
        type: string
        required: true
      DOCKER_FILE_PATH:
        description: 'path of docker file'
        required: true
        type: string
      GO_VERSION:
        description: 'go version'
        required: false
        type: string
        default: '1.20'
      EXTRA_DEPENDENCIES:
        description: 'enable step to install extra dependencies'
        required: false
        type: boolean
        default: false
      DEPENDENCIES_COMMAND:
        description: 'commands to install extra dependencies'
        required: false
        type: string
      BUILD_COMMAND:
        description: 'go build command'
        required: true
        type: string
      ARTIFACT_PATH:
        description: "path used for build with respect to main.go file"
        required: true
        type: string
      SHA:
        type: string
        required: true
      BUILD_ARGUMENTS:
        description: 'build arguments for DockerFile'
        required: false
        type: string
    outputs:
      IMAGE:
        description: 'required input'
        value: ${{ jobs.dockerize.outputs.image }}
    secrets:
      PAT:
        description: 'required input'
        required: true
      GAR_KEY:
        description: 'required input'
        required: true



jobs:
  build:
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development') && (github.event_name == 'push')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ inputs.GO_VERSION }}'

      - name: Get dependencies
        run: |
          git config --global url."https://${{ secrets.PAT }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global http.sslVerify false
          go mod download

      - name: Extra dependencies
        if: ${{ inputs.EXTRA_DEPENDENCIES }}
        run: |
          ${{ inputs.DEPENDENCIES_COMMAND }}

      - name: Make Directory
        run: mkdir build

      - name: Build
        run: |
          cd ${{ inputs.DOCKER_FILE_PATH }}
          ls
          pwd
          ${{ inputs.BUILD_COMMAND }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ inputs.APP_NAME }}
          path: ${{ inputs.DOCKER_FILE_PATH }}/${{ inputs.ARTIFACT_PATH }}

  dockerize:
    name: 🐳 Dockerize
    runs-on: ubuntu-latest
    needs: build
    outputs:
      image: ${{ steps.output-image.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.APP_NAME }}

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.IMAGE_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GAR_KEY }}

      - name: Build and Push Docker Image to gar
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ${{ inputs.DOCKER_FILE_PATH }}/Dockerfile
          tags:  ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.GAR_PROJECT }}/${{ inputs.GAR_REGISTRY }}/${{ inputs.APP_NAME }}:${{ inputs.SHA }}
          build-args: |
            ${{ inputs.BUILD_ARGUMENTS }}
      - id: output-image
        run: echo "image=`echo  ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.GAR_PROJECT }}/${{ inputs.GAR_REGISTRY }}/${{ inputs.APP_NAME }}:${{ inputs.SHA }}`" >> "$GITHUB_OUTPUT"